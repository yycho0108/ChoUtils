syntax = "proto3";

import "geometry.proto";

package cho.proto.vis.render;

// The greeting service definition.
service Renderer {
  // Sends a greeting
  rpc Render(RenderRequest) returns (RenderReply) {
  }
}

enum RenderType {
  kNone = 0;
  kPoints = 1;
  kLines = 2;
  kLinestrip = 3;
  kLineloop = 4;
  kTriangles = 5;
  kPlane = 6;

  // higher-order geometries
  kSphere = 7;
  kCuboid = 8;
}

enum RepresentationType {
  kAsNone = 0;  // hide
  kAsPoints = 1;
  kAsSurface = 2;
  kAsWireframe = 3;
}

// request
message RenderRequest {
  string name = 1;
  RepresentationType representation = 3;
  oneof color {
    core.geometry.Color uniform = 4;
    core.geometry.Colors each = 5;
  }
  oneof data {
    core.geometry.Point point = 7;
    core.geometry.PointCloud cloud = 8;
    core.geometry.Lines lines = 9;
    core.geometry.Plane plane = 10;
    core.geometry.Sphere sphere = 11;
    core.geometry.Cuboid cuboid = 12;
  }
  float opacity = 6;
}

// response (set success flag ?)
message RenderReply {
  string message = 1;
}
